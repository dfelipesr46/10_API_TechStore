// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _10_API_TechStore.Data;

#nullable disable

namespace _10_API_TechStore.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("_10_API_TechStore.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("email")
                        .HasColumnType("longtext")
                        .HasColumnName("email");

                    b.Property<string>("name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<string>("phoneNumber")
                        .HasColumnType("longtext")
                        .HasColumnName("phoneNumber");

                    b.Property<int>("rolId")
                        .HasColumnType("int")
                        .HasColumnName("id_rol");

                    b.HasKey("Id");

                    b.HasIndex("rolId");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("_10_API_TechStore.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<int>("stateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("_10_API_TechStore.Models.OrderProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("amount")
                        .HasColumnType("int")
                        .HasColumnName("amount");

                    b.Property<int>("orderId")
                        .HasColumnType("int")
                        .HasColumnName("orderId");

                    b.Property<int>("productId")
                        .HasColumnType("int")
                        .HasColumnName("productId");

                    b.HasKey("Id");

                    b.HasIndex("orderId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("_10_API_TechStore.Models.OrderState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("state")
                        .HasColumnType("longtext")
                        .HasColumnName("state");

                    b.HasKey("Id");

                    b.ToTable("OrderStates");
                });

            modelBuilder.Entity("_10_API_TechStore.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("categoryId")
                        .HasColumnType("int")
                        .HasColumnName("categoryId");

                    b.Property<string>("description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.Property<int>("price")
                        .HasColumnType("int")
                        .HasColumnName("price");

                    b.Property<int>("stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.HasKey("Id");

                    b.HasIndex("categoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("_10_API_TechStore.Models.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("description")
                        .HasColumnType("longtext")
                        .HasColumnName("description");

                    b.Property<string>("name")
                        .HasColumnType("longtext")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("_10_API_TechStore.Models.UserRol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("type")
                        .HasColumnType("longtext")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.ToTable("UserRols");
                });

            modelBuilder.Entity("_10_API_TechStore.Models.Client", b =>
                {
                    b.HasOne("_10_API_TechStore.Models.UserRol", "UserRol")
                        .WithMany()
                        .HasForeignKey("rolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserRol");
                });

            modelBuilder.Entity("_10_API_TechStore.Models.OrderProduct", b =>
                {
                    b.HasOne("_10_API_TechStore.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("orderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("_10_API_TechStore.Models.Product", b =>
                {
                    b.HasOne("_10_API_TechStore.Models.ProductCategory", "ProductCategory")
                        .WithMany()
                        .HasForeignKey("categoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductCategory");
                });
#pragma warning restore 612, 618
        }
    }
}
